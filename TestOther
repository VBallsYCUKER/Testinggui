local loaded = false
 
   success, err = pcall(function()
       while not loaded do
    if game["loaded"] then
        
        loaded = true
        break
    end
    end
   end)
            if success then

                warn(" game loaded Function executed successfully")

             
                
            else
                warn("Error occurred:", err)
            
            end

print("game loaded")
local success, result = pcall(function()
    repeat
        task.wait()
    until game.Players.LocalPlayer ~= nil and game.Players.LocalPlayer.Name ~= nil and
        game.Players.LocalPlayer:GetMouse() ~= nil

    repeat
        task.wait()
    until game:IsLoaded()
    game:WaitForChild("ReplicatedStorage")
    game.ReplicatedStorage:WaitForChild("Datas")
    game.ReplicatedStorage.Datas:WaitForChild(game.Players.LocalPlayer.UserId)
end)
if success then



                warn(" game loaded Function executed successfully")

                
            else
                warn("Error occurred:", err)
            
            end


local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")

local ScreenGui = Instance.new("ScreenGui")
local Frame = Instance.new("Frame")
local PlayerInfoFrame = Instance.new("Frame")
local AvatarImage = Instance.new("ImageLabel")
local DisplayNameLabel = Instance.new("TextLabel")
local UsernameLabel = Instance.new("TextLabel")
local UICornerAvatar = Instance.new("UICorner")
local UICornerDisplayName = Instance.new("UICorner")
local UICornerUsername = Instance.new("UICorner")
local UICornerMainFrame = Instance.new("UICorner")
local CloseButton = Instance.new("TextButton")
local UICornerButton = Instance.new("UICorner")
local TitleLabel = Instance.new("TextLabel")  -- Title TextLabel

local player = game.Players.LocalPlayer

-- Prevent GUI from resetting on player death
ScreenGui.ResetOnSpawn = false
ScreenGui.Parent = player:WaitForChild("PlayerGui")

-- Set the properties for the main frame (start off-screen, small)
Frame.Parent = ScreenGui
Frame.AnchorPoint = Vector2.new(0.5, 0.5)
Frame.Position = UDim2.new(0, 10, 1, -10)  -- Starting at bottom-left off-screen
Frame.Size = UDim2.new(0, 0, 0, 0)  -- Starting size (small)
Frame.BackgroundColor3 = Color3.fromRGB(120, 81, 169)  -- Royal purple color
Frame.BackgroundTransparency = 0.5          -- 0.5 transparency
Frame.BorderSizePixel = 0                    -- No border

-- Add UICorner to the main frame (slightly rounded)
UICornerMainFrame.CornerRadius = UDim.new(0.05, 0)  -- Subtle rounding
UICornerMainFrame.Parent = Frame  -- Apply to the main frame

-- Ensure the GUI works on all device types
ScreenGui.IgnoreGuiInset = true

-- Set up the Title TextLabel (top of the main frame)
TitleLabel.Parent = Frame
TitleLabel.Size = UDim2.new(1, 0, 0, 50)  -- Full width, height of 50
TitleLabel.Position = UDim2.new(0, 0, 0, 0)  -- Top of the frame
TitleLabel.Text = "Rape Machine Mini"
TitleLabel.TextScaled = true
TitleLabel.BackgroundColor3 = Color3.fromRGB(0, 0, 0)  -- Black background
TitleLabel.BackgroundTransparency = 1  -- Fully transparent background
TitleLabel.TextColor3 = Color3.new(1, 1, 1)  -- White text
TitleLabel.TextStrokeTransparency = 0  -- Visible text stroke for better readability
TitleLabel.BorderSizePixel = 0  -- No border

-- Set up the player info frame (top-right corner)
PlayerInfoFrame.Parent = Frame
PlayerInfoFrame.AnchorPoint = Vector2.new(1, 0)  -- Anchor to the top-right corner
PlayerInfoFrame.Position = UDim2.new(1, -10, 0, 60)  -- Positioned below the TitleLabel
PlayerInfoFrame.Size = UDim2.new(0, 200, 0, 100)  -- Adjusted size for the info box
PlayerInfoFrame.BackgroundTransparency = 1  -- Invisible background for layout

-- Set up the player's avatar in a circular image
AvatarImage.Parent = PlayerInfoFrame
AvatarImage.Size = UDim2.new(0, 64, 0, 64)  -- 64x64 size
AvatarImage.Position = UDim2.new(0, 0, 0, 10)  -- Left side
AvatarImage.Image = "rbxthumb://type=AvatarHeadShot&id=" .. player.UserId .. "&w=150&h=150"  -- Player avatar
AvatarImage.BackgroundColor3 = Color3.fromRGB(200, 200, 200)  -- Light gray background
AvatarImage.BackgroundTransparency = 0.5  -- Slight transparency

-- Circular border around the avatar
UICornerAvatar.CornerRadius = UDim.new(1, 0)  -- Full circle
UICornerAvatar.Parent = AvatarImage  -- Apply circular shape to avatar

-- Display Name label
DisplayNameLabel.Parent = PlayerInfoFrame
DisplayNameLabel.Size = UDim2.new(0, 120, 0, 40)  -- Adjust size for the display name
DisplayNameLabel.Position = UDim2.new(0, 70, 0, 10)  -- Position to the right of the avatar
DisplayNameLabel.Text = player.DisplayName  -- Set the player's display name
DisplayNameLabel.TextColor3 = Color3.new(0, 0, 0)  -- Black text
DisplayNameLabel.TextScaled = true
DisplayNameLabel.BackgroundColor3 = Color3.new(1, 1, 1)  -- White background for the label
DisplayNameLabel.BackgroundTransparency = 0.5  -- Slight transparency

-- Circular border for the display name
UICornerDisplayName.CornerRadius = UDim.new(0.4, 0)  -- Rounded border (not fully circular but more rounded)
UICornerDisplayName.Parent = DisplayNameLabel

-- Username label (below display name)
UsernameLabel.Parent = PlayerInfoFrame
UsernameLabel.Size = UDim2.new(0, 120, 0, 30)  -- Adjust size for the username
UsernameLabel.Position = UDim2.new(0, 70, 0, 50)  -- Positioned below the display name
UsernameLabel.Text = "(@" .. player.Name .. ")"  -- Set the player's username
UsernameLabel.TextColor3 = Color3.new(0.2, 0.2, 0.2)  -- Darker grey text
UsernameLabel.TextScaled = true
UsernameLabel.BackgroundColor3 = Color3.new(1, 1, 1)  -- White background for the label
UsernameLabel.BackgroundTransparency = 0.5  -- Slight transparency

-- Circular border for the username
UICornerUsername.CornerRadius = UDim.new(0.4, 0)  -- Rounded border
UICornerUsername.Parent = UsernameLabel

-- Set up the Close button properties (transparent background)
CloseButton.Parent = Frame
CloseButton.Size = UDim2.new(0, 50, 0, 50)  -- Button size
CloseButton.Text = "+"
CloseButton.TextScaled = true
CloseButton.BackgroundTransparency = 1  -- Transparent background
CloseButton.TextColor3 = Color3.new(0, 0, 0)  -- Black text

-- Circular border for the button
UICornerButton.CornerRadius = UDim.new(1, 0)  -- Fully rounded button
UICornerButton.Parent = CloseButton

-- Function to toggle visibility and minimize/maximize the GUI when button is clicked
local minimized = false
CloseButton.MouseButton1Click:Connect(function()
	if not minimized then
		-- Hide the player info components
		AvatarImage.Visible = false
		DisplayNameLabel.Visible = false
		UsernameLabel.Visible = false

		-- Change the TitleLabel text when minimized
		TitleLabel.Text = "RM Mini"
		print("Title changed to PsH")  -- Debugging line

		-- Minimize the frame to a bar while keeping position
		local currentPos = Frame.Position
		Frame:TweenSize(UDim2.new(0.25, 0, 0.05, 0), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.5)
		Frame:TweenPosition(currentPos, Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.5)
		CloseButton.Text = "+"
		minimized = true
	else
		-- Show the player info components
		AvatarImage.Visible = true
		DisplayNameLabel.Visible = true
		UsernameLabel.Visible = true

		-- Change the TitleLabel text back when expanded
		TitleLabel.Text = "Rape Machine Mini"
		print("Title changed to Rape Machine Mini")  -- Debugging line

		-- Restore the frame to full size while keeping the original position
		Frame:TweenSize(UDim2.new(0.5, 0, 0.5, 0), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.5)
		Frame:TweenPosition(UDim2.new(0.5, 0, 0.5, 0), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.5)
		CloseButton.Text = "-"
		minimized = false
	end
end)

-- Make the frame draggable
local dragging = false
local dragInput, dragStart, startPos

local function update(input)
	local delta = input.Position - dragStart
	Frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
end

-- Dragging for minimized bar
CloseButton.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
		dragging = true
		dragStart = input.Position
		startPos = Frame.Position

		input.Changed:Connect(function()
			if input.UserInputState == Enum.UserInputState.End then
				dragging = false
			end
		end)
	end
end)

-- Dragging for both minimized and full size
Frame.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
		dragging = true
		dragStart = input.Position
		startPos = Frame.Position

		input.Changed:Connect(function()
			if input.UserInputState == Enum.UserInputState.End then
				dragging = false
			end
		end)
	end
end)

Frame.InputChanged:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
		dragInput = input
	end
end)

UserInputService.InputChanged:Connect(function(input)
	if input == dragInput and dragging then
		update(input)
	end
end)

-- Add a delay to ensure everything is initialized
wait(0.1)

-- Target position and size for the Frame (center of screen)
local targetPosition = UDim2.new(0.5, 0, 0.5, 0)
local targetSize = UDim2.new(0.5, 0, 0.5, 0)  -- Full size after animation

-- Tween the Frame to the target position and size
local tweenInfo = TweenInfo.new(1, Enum.EasingStyle.Quint, Enum.EasingDirection.Out)
local positionTween = TweenService:Create(Frame, tweenInfo, {Position = targetPosition})
local sizeTween = TweenService:Create(Frame, tweenInfo, {Size = targetSize})

-- Play the animation (Position and Size)
positionTween:Play()
sizeTween:Play()
